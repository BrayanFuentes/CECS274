import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;


public class BiggestSquare
{
    public static void main(String[] args) throws FileNotFoundException
    {
        File inputFile = new File("input.txt");
        Scanner scn = new Scanner(inputFile);
        scn.useDelimiter("\n");
        ArrayList<String> inputs = new ArrayList<String>();
        //makes sure that there is a next line to read. Then it takes each line to put them into an arraylist
        while(scn.hasNextLine())
        {
                String temp = scn.nextLine();
                inputs.add(temp);
        }
        ArrayList<Character> grid = new ArrayList<Character>();
        int value = inputs.size();
        char[][]arr = new char[value][value];
        //reads the each string in the arraylist and takes each character in all of the strings and puts them in another arraylist
        for(int i = 0; i < value; i++)
        {
            String temp = inputs.get(i);
            for (int r = 0; r < temp.length(); r++) 
            {
                grid.add(temp.charAt(r));
            }
            
        }
        
        //the count makes sure that the for loop will read the whole arrayList and put it in the 2 dimsensional array
        int count = 0;
        for(int a = 0; a < value; a++ )
        {
            for(int b = 0 ; b < value;b++ )
            {
                arr[a][b] = grid.get(count);
                count++;
            }
        }
        // displays the 2 dimensional array
        for(int c = 0; c < value; c++)
        {
            for(int d = 0; d < value; d++)
            {
                System.out.print(arr[c][d] + " ");
                
            }
            System.out.println();
        }
        int all = 0;
        ArrayList<Integer> x_cords = new ArrayList<Integer>();
        ArrayList<Integer> y_cords = new ArrayList<Integer>();
        ArrayList<Integer> distances = new ArrayList<Integer>();
        
        for(int row = 0; row < value; row++)
        {
            for(int col = 0; col < value; col++)
            {
                if(arr[row][col] == 'A')
                {
                    x_cords.add(row);
                    y_cords.add(col);
                    
                }
            }
        }
        System.out.println(x_cords);
        System.out.println(y_cords);
        
        for(int c = 0; c < x_cords.size(); c++)
        {
            int before = x_cords.get(c);
            if(c != x_cords.size()-1)
            {
                int after = x_cords.get(c+1);
                if(before == after)
                {
                    //biggest col and add 1 to it, then subtract it to the smallest col
                    
                    int col1 = y_cords.get(c);
                    int col2 = y_cords.get(c+1);
                    if(col1 < col2)
                    {
                         int greatest = (col2 +1) - col1;
                         distances.add(greatest);
                    }
                }
                
            }
        }
        System.out.println(distances);
        int biggest = 0;
        for(int i = 0;i < distances.size()-1;i++)
        {
            if(distances.get(i) >= biggest)
            {
                biggest = distances.get(i);
            }
            
        }
        
        System.out.println(biggest);
        scn.close();
    }
    
        
}
